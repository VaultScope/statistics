// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/login" | "/node/[id]" | "/node/[id]/apikeys" | "/node/[id]/hardware" | "/node/[id]/logs" | "/node/[id]/network" | "/node/[id]/process" | "/profile" | "/register" | "/settings" | "/users"
type AppRouteHandlerRoutes = "/api/auth/check-setup" | "/api/auth/login" | "/api/auth/logout" | "/api/auth/register" | "/api/categories" | "/api/categories/[id]" | "/api/nodes" | "/api/nodes/[id]" | "/api/profile" | "/api/profile/check-username" | "/api/roles" | "/api/roles/[id]" | "/api/users" | "/api/users/[id]"
type PageRoutes = never
type LayoutRoutes = "/" | "/node/[id]"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/auth/check-setup": {}
  "/api/auth/login": {}
  "/api/auth/logout": {}
  "/api/auth/register": {}
  "/api/categories": {}
  "/api/categories/[id]": { "id": string; }
  "/api/nodes": {}
  "/api/nodes/[id]": { "id": string; }
  "/api/profile": {}
  "/api/profile/check-username": {}
  "/api/roles": {}
  "/api/roles/[id]": { "id": string; }
  "/api/users": {}
  "/api/users/[id]": { "id": string; }
  "/login": {}
  "/node/[id]": { "id": string; }
  "/node/[id]/apikeys": { "id": string; }
  "/node/[id]/hardware": { "id": string; }
  "/node/[id]/logs": { "id": string; }
  "/node/[id]/network": { "id": string; }
  "/node/[id]/process": { "id": string; }
  "/profile": {}
  "/register": {}
  "/settings": {}
  "/users": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/node/[id]": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
