apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vaultscope.fullname" . }}
  labels:
    {{- include "vaultscope.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vaultscope.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "vaultscope.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vaultscope.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['sh', '-c', 'npm run db:migrate || true']
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV | quote }}
            - name: DATABASE_URL
              value: {{ .Values.env.DATABASE_URL | quote }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            - name: NODE_ENV
              value: {{ .Values.env.NODE_ENV | quote }}
            - name: PORT
              value: {{ .Values.env.PORT | quote }}
            - name: DATABASE_URL
              value: {{ .Values.env.DATABASE_URL | quote }}
            {{- if .Values.influxdb.enabled }}
            - name: INFLUXDB_URL
              value: {{ .Values.influxdb.url | quote }}
            - name: INFLUXDB_ORG
              value: {{ .Values.influxdb.org | quote }}
            - name: INFLUXDB_BUCKET
              value: {{ .Values.influxdb.bucket | quote }}
            - name: INFLUXDB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "vaultscope.fullname" . }}-secret
                  key: influxdb-token
            - name: INFLUXDB_RETENTION_DAYS
              value: {{ .Values.influxdb.retentionDays | quote }}
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ .Values.redis.host | quote }}
            - name: REDIS_PORT
              value: {{ .Values.redis.port | quote }}
            {{- if .Values.redis.password }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "vaultscope.fullname" . }}-secret
                  key: redis-password
            {{- end }}
            {{- end }}
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_HOST
              value: {{ .Values.postgresql.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.port | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "vaultscope.fullname" . }}-secret
                  key: postgres-password
            {{- end }}
            {{- if .Values.ldap.enabled }}
            - name: LDAP_URL
              value: {{ .Values.ldap.url | quote }}
            - name: LDAP_BIND_DN
              value: {{ .Values.ldap.bindDN | quote }}
            - name: LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "vaultscope.fullname" . }}-secret
                  key: ldap-password
            - name: LDAP_SEARCH_BASE
              value: {{ .Values.ldap.searchBase | quote }}
            - name: LDAP_SEARCH_FILTER
              value: {{ .Values.ldap.searchFilter | quote }}
            {{- end }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "vaultscope.fullname" . }}-secret
                  key: jwt-secret
            - name: SESSION_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "vaultscope.fullname" . }}-secret
                  key: session-secret
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            - name: config
              mountPath: /app/config
              readOnly: true
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "vaultscope.fullname" . }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: config
          configMap:
            name: {{ include "vaultscope.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}